# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
# Please make sure to check all the converted content, it is your team's responsibility to make sure that the pipeline is still valid and functions as expected.
# This pipeline will be extended to the MicroBuild template
trigger: none
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/dev
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
name: $(Date:yyyyMMdd).$(Rev:r)
variables:
- name: 1espt.codesignvalidation.enforced
  value: false
- name: PipelineClassification_Audited
  value: Production
- name: PipelineGovernanceStatus_Audited
  value: true
- name: policy_service.build_task_injection.enabled
  value: true
- name: TeamName
  value: 'TeamsFx'
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    sdl:
      sourceAnalysisPool:
        name: VSEngSS-MicroBuild2022-1ES
        image: server2022-microbuildVS2022-1es
        os: windows
    pool:
      name: AzurePipelines-EO
      image: AzurePipelinesWindows2022compliantGPT
      os: windows
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: stage
      jobs:
      - job: Job_1
        displayName: Agent job 1
        pool:
          name: VSEngSS-MicroBuild2022-1ES
        templateContext:
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Artifact: drop'
            targetPath: '$(Build.ArtifactStagingDirectory)\loc'
            artifactName: drop
            artifactType: Container
            condition: succeeded()
            sbomEnabled: false
        steps:
        - checkout: self
          clean: true
          fetchTags: false
          persistCredentials: true
        - task: NuGetAuthenticate@1
          displayName: NuGet Authenticate
          inputs:
            nuGetServiceConnections: OSSCG Feed - Microsoft approved OSS packages
        - task: cesve.one-loc-build.one-loc-build.OneLocBuild@2
          displayName: 'Localization Build: Localize/LocProject.json'
          inputs:
            isCreatePrSelected: true
            repoType: gitHub
            isShouldReusePrSelected: true
            isAutoCompletePrSelected: false
            packageSourceAuth: patAuth
            patVariable: '$(System.AccessToken)'
            dependencyPackageSource: https://devdiv.pkgs.visualstudio.com/DevDiv/_packaging/TeamsFx/nuget/v3/index.json
        - task: PowerShell@2
          displayName: Copy zh json files for VSC
          inputs:
            targetType: inline
            script: |
              # Write your PowerShell commands here.
              Write-Host "Copying zh-Hans & zh-Hant to zh-cn & zh-tw under vscode-extension for VS Code"
              Set-Location -Path ".\packages\fx-core\resource"
              Copy-Item ".\package.nls.zh-Hans.json" -Destination ".\package.nls.zh-cn.json"
              Copy-Item ".\package.nls.zh-Hant.json" -Destination ".\package.nls.zh-tw.json"
              Set-Location -Path "..\..\vscode-extension"
              Copy-Item ".\package.nls.zh-Hans.json" -Destination ".\package.nls.zh-cn.json"
              Copy-Item ".\package.nls.zh-Hant.json" -Destination ".\package.nls.zh-tw.json"