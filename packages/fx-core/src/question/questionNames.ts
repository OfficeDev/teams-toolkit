// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

export enum QuestionNames {
  Scratch = "scratch",
  SctatchYes = "scratch-yes",
  AppName = "app-name",
  Folder = "folder",
  ProjectPath = "projectPath",
  ProgrammingLanguage = "programming-language",
  ProjectType = "project-type",
  Capabilities = "capabilities",
  BotTrigger = "bot-host-type-trigger",
  Runtime = "runtime",
  SPFxSolution = "spfx-solution",
  SPFxInstallPackage = "spfx-install-latest-package",
  SPFxFramework = "spfx-framework-type",
  SPFxWebpartName = "spfx-webpart-name",
  SPFxWebpartDesc = "spfx-webpart-desp",
  SPFxFolder = "spfx-folder",
  OfficeAddinFolder = "addin-project-folder",
  OfficeAddinManifest = "addin-project-manifest",
  OfficeAddinTemplate = "addin-template-select",
  OfficeAddinHost = "addin-host",
  OfficeAddinImport = "addin-import",
  OfficeAddinCapability = "addin-office-capability",
  OfficeAddinFramework = "office-addin-framework-type",
  Samples = "samples",
  ReplaceContentUrl = "replaceContentUrl",
  ReplaceWebsiteUrl = "replaceWebsiteUrl",
  ReplaceBotIds = "replaceBotIds",
  SafeProjectName = "safeProjectName",
  RepalceTabUrl = "tdp-tab-url",
  ValidateMethod = "validate-method",
  AppPackagePath = "appPackagePath",
  CopilotPluginExistingApi = "copilot-plugin-existing-api", // group name for creating a Copilot plugin from existing api
  ApiSpecLocation = "openapi-spec-location",
  OpenAIPluginManifest = "openai-plugin-manifest",
  ApiOperation = "api-operation",
  MeArchitectureType = "me-architecture",
  ApiSpecApiKey = "api-key",
  ApiSpecApiKeyConfirm = "api-key-confirm",
  ApiMEAuth = "api-me-auth",

  CustomCopilotRag = "custom-copilot-rag",
  CustomCopilotAssistant = "custom-copilot-agent",
  LLMService = "llm-service",
  OpenAIKey = "openai-key",
  AzureOpenAIKey = "azure-openai-key",
  AzureOpenAIEndpoint = "azure-openai-endpoint",

  Features = "features",
  Env = "env",
  SourceEnvName = "sourceEnvName",
  TargetEnvName = "targetEnvName",
  TargetResourceGroupName = "targetResourceGroupName",
  NewResourceGroupName = "newResourceGroupName",
  NewResourceGroupLocation = "newResourceGroupLocation",
  NewTargetEnvName = "newTargetEnvName",
  ExistingTabEndpoint = "existing-tab-endpoint",
  TeamsAppManifestFilePath = "manifest-path",
  LocalTeamsAppManifestFilePath = "local-manifest-path",
  AadAppManifestFilePath = "manifest-file-path",
  TeamsAppPackageFilePath = "app-package-file-path",
  ConfirmManifest = "confirmManifest",
  ConfirmLocalManifest = "confirmLocalManifest",
  ConfirmAadManifest = "confirmAadManifest",
  OutputZipPathParamName = "output-zip-path",
  OutputManifestParamName = "output-manifest-path",
  M365Host = "m365-host",

  ManifestPath = "manifest-path",

  UserEmail = "email",

  collaborationAppType = "collaborationType",
  DestinationApiSpecFilePath = "destination-api-spec-location",
}

export enum CliQuestionName {
  Capability = "capability",
}
