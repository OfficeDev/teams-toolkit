{{header}}

provision:
{{aadAppCreate}}

{{teamsAppCreate}}

{{localBotAadAppCreate}}

  # Create or update the bot registration on dev.botframework.com
  - uses: botFramework/create
    with:
      botId: $\{{BOT_ID}}
      name: $\{{CONFIG__MANIFEST__APPNAME__SHORT}}-bot
      messagingEndpoint: $\{{PROVISIONOUTPUT__AZUREWEBAPPBOTOUTPUT__SITEENDPOINT}}/api/messages
      description: ""
      channels:
        - name: msteams

  - uses: script # Set env for local launch
    with:
      run:
        echo "::set-teamsfx-env PROVISIONOUTPUT__AZURESTORAGETABOUTPUT__DOMAIN=localhost:53000";
        echo "::set-teamsfx-env PROVISIONOUTPUT__AZURESTORAGETABOUTPUT__ENDPOINT=https://localhost:53000";
        echo "::set-teamsfx-env PROVISIONOUTPUT__AZURESTORAGETABOUTPUT__INDEXPATH=/index.html#";

{{aadAppUpdate}}

{{localTeamsAppUpdate}}

deploy:
  # Install development tool(s)
  - uses: devTool/install
    with:
      devCert:
        trust: true
      func:
        version: ~4.0.5174
        symlinkDir: ./devTools/func
      dotnet: true
    # Write the information of installed development tool(s) into environment
    # file for the specified environment variable(s).
    writeToEnvironmentFile:
      sslCertFile: SSL_CRT_FILE
      sslKeyFile: SSL_KEY_FILE
      funcPath: FUNC_PATH
      dotnetPath: DOTNET_PATH

  - uses: cli/runDotnetCommand
    with:
      args: build extensions.csproj -o ./bin --ignore-failed-sources
      workingDirectory: api
      execPath: $\{{DOTNET_PATH}}

  # Generate runtime environment variables
  - uses: file/createOrUpdateEnvironmentFile
    with:
      target: ./tabs/.env.teamsfx.local
      envs:
        BROWSER: none
        HTTPS: true
        PORT: 53000
        SSL_CRT_FILE: $\{{SSL_CRT_FILE}}
        SSL_KEY_FILE: $\{{SSL_KEY_FILE}}

  # Generate runtime environment variables
  - uses: file/createOrUpdateEnvironmentFile
    with:
      target: ./bot/.env.teamsfx.local
      envs:
        BOT_ID: $\{{BOT_ID}}
        BOT_PASSWORD: $\{{SECRET_BOT_PASSWORD}}

  # Generate runtime environment variables
  - uses: file/createOrUpdateEnvironmentFile
    with:
      target: ./tabs/.env.teamsfx.local
      envs:
        REACT_APP_START_LOGIN_PAGE_URL: $\{{PROVISIONOUTPUT__AZURESTORAGETABOUTPUT__ENDPOINT}}/auth-start.html
        REACT_APP_CLIENT_ID: $\{{AAD_APP_CLIENT_ID}}
        REACT_APP_FUNC_ENDPOINT: http://localhost:7071
        REACT_APP_FUNC_NAME: getUserProfile

  # Generate runtime environment variables
  - uses: file/createOrUpdateEnvironmentFile
    with:
      target: ./bot/.env.teamsfx.local
      envs:
        M365_CLIENT_ID: $\{{AAD_APP_CLIENT_ID}}
        M365_CLIENT_SECRET: $\{{SECRET_AAD_APP_CLIENT_SECRET}}
        M365_TENANT_ID: $\{{AAD_APP_TENANT_ID}}
        M365_AUTHORITY_HOST: $\{{AAD_APP_OAUTH_AUTHORITY_HOST}}
        INITIATE_LOGIN_ENDPOINT: $\{{PROVISIONOUTPUT__AZUREWEBAPPBOTOUTPUT__SITEENDPOINT}}/auth-start.html
        M365_APPLICATION_ID_URI: api://$\{{PROVISIONOUTPUT__AZURESTORAGETABOUTPUT__ENDPOINT}}/botid-$\{{BOT_ID}}
        API_ENDPOINT: http://localhost:7071

  # Generate runtime environment variables
  - uses: file/createOrUpdateEnvironmentFile
    with:
      target: ./api/.env.teamsfx.local
      envs:
        M365_CLIENT_ID: $\{{AAD_APP_CLIENT_ID}}
        M365_CLIENT_SECRET: $\{{SECRET_AAD_APP_CLIENT_SECRET}}
        M365_TENANT_ID: $\{{AAD_APP_TENANT_ID}}
        M365_AUTHORITY_HOST: $\{{AAD_APP_OAUTH_AUTHORITY_HOST}}
        ALLOWED_APP_IDS: 1fec8e78-bce4-4aaf-ab1b-5451cc387264;5e3ce6c0-2b1f-4285-8d4b-75ee78787346;0ec893e0-5785-4de6-99da-4ed124e5296c;4345a7b9-9a63-4910-a426-35363201d503;4765445b-32c6-49b0-83e6-1d93765276ca;d3590ed6-52b3-4102-aeff-aad2292ab01c;00000002-0000-0ff1-ce00-000000000000;bc59ab01-8403-45c6-8796-ac3ef710b3e3;27922004-5251-4030-b22d-91ecd9a37ea4

  # Run npm command
  - uses: cli/runNpmCommand
    with:
      args: install --no-audit
      workingDirectory: tabs

  # Run npm command
  - uses: cli/runNpmCommand
    with:
      args: install --no-audit
      workingDirectory: api

  # Run npm command
  - uses: cli/runNpmCommand
    with:
      args: install --no-audit
      workingDirectory: bot

