{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "custom-token-validation-without-using-Easy-Auth",
  "steps": [
    {
      "file": "src/functions/repair.ts",
      "selection": {
        "start": {
          "line": 55,
          "character": 3
        },
        "end": {
          "line": 55,
          "character": 26
        }
      },
      "description": "The reason for custom token validation is that Azure Function Core Tools do not support authentication when running locally. This template is designed to demonstrate local debugging of authentication functionalities in the API Message Extension. Therefore, this approach was taken. In production, you should leverage the authentication capabilities of Azure Functions as they are more secure and reliable.",
      "title": "Introduction"
    },
    {
      "file": "package.json",
      "selection": {
        "start": {
          "line": 16,
          "character": 9
        },
        "end": {
          "line": 18,
          "character": 33
        }
      },
      "description": "Added dependencies for token validation.\r\n",
      "title": "Add dependencies"
    },
    {
      "file": "teamsapp.local.yml",
      "selection": {
        "start": {
          "line": 9,
          "character": 1
        },
        "end": {
          "line": 28,
          "character": 50
        }
      },
      "description": "Added new action for creating a Microsoft Entra app.",
      "title": "Config yaml actions"
    },
    {
      "file": "src/functions/repair.ts",
      "selection": {
        "start": {
          "line": 58,
          "character": 5
        },
        "end": {
          "line": 64,
          "character": 6
        }
      },
      "description": "Check if the request is authenticated. You can remove those code when deploying the project remotely because it already uses Azure's built-in authentication in production.",
      "title": "Check request"
    },
    {
      "file": "src/functions/middleware/authMiddleware.ts",
      "selection": {
        "start": {
          "line": 29,
          "character": 5
        },
        "end": {
          "line": 36,
          "character": 51
        }
      },
      "description": "Validating tokens against specified options, including issuer, audience, scopes, roles, and allowed tenants, using a JWKS client for key retrieval and caching.",
      "title": "Validate token"
    }
  ]
}